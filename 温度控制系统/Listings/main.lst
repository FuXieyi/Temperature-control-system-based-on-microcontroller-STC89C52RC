C51 COMPILER V9.54   MAIN                                                                  07/02/2025 20:33:08 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "LCD1602.h"
   3          #include "DS18B20.h"
   4          #include "Delay.h"
   5          #include "AT24C02.h"
   6          #include "Key.h"
   7          #include "Timer0.h"
   8          #include "Buzzer.h"
   9          
  10          sbit LED1=P2^0; //定义LED D1，连接到P2.0引脚
  11          sbit LED2=P2^1; //定义LED D2，连接到P2.1引脚
  12          
  13          //数码管位选信号定义（用于禁用数码管）
  14          sbit LSA=P2^2;
  15          sbit LSB=P2^3;
  16          sbit LSC=P2^4;
  17          
  18          float T,TShow;
  19          char TLow,THigh;
  20          unsigned char KeyNum;
  21          unsigned char AlarmFlag = 0;            //报警标志位
  22          unsigned int AlarmCount = 0;            //报警计数器
  23          
  24          void main()
  25          {
  26   1              //禁用数码管显示（防止数码管干扰LCD显示）
  27   1              LSA=1;
  28   1              LSB=1;
  29   1              LSC=1;  //设置为111，禁用所有数码管位选
  30   1              P0=0x00;//清零P0口，确保数码管不显示内容
  31   1              
  32   1              //初始化LED状态
  33   1              LED1=1; //LED D1初始熄灭
  34   1              LED2=1; //LED D2初始熄灭
  35   1              
  36   1              DS18B20_ConvertT();             //上电先转换一次温度，防止第一次读数据错误
  37   1              Delay(1000);                    //等待转换完成
  38   1              THigh=AT24C02_ReadByte(0);      //读取温度阈值数据
  39   1              TLow=AT24C02_ReadByte(1);
  40   1              if(THigh>125 || TLow<-55 || THigh<=TLow)
  41   1              {
  42   2                      THigh=20;                       //如果阈值非法，则设为默认值
  43   2                      TLow=15;
  44   2              }
  45   1              LCD_Init();
  46   1              LCD_ShowString(1,1,"T:");
  47   1              LCD_ShowString(2,1,"TH:");
  48   1              LCD_ShowString(2,9,"TL:");
  49   1              LCD_ShowSignedNum(2,4,THigh,3);
  50   1              LCD_ShowSignedNum(2,12,TLow,3);
  51   1              Timer0_Init();
  52   1              
  53   1              while(1)
  54   1              {
C51 COMPILER V9.54   MAIN                                                                  07/02/2025 20:33:08 PAGE 2   

  55   2                      KeyNum=Key();
  56   2                      
  57   2                      /*温度读取及显示*/
  58   2                      DS18B20_ConvertT();     //转换温度
  59   2                      T=DS18B20_ReadT();      //读取温度
  60   2                      if(T<0)                         //如果温度小于0
  61   2                      {
  62   3                              LCD_ShowChar(1,3,'-');  //显示负号
  63   3                              TShow=-T;               //将温度变为正数
  64   3                      }
  65   2                      else                            //如果温度大于等于0
  66   2                      {
  67   3                              LCD_ShowChar(1,3,'+');  //显示正号
  68   3                              TShow=T;
  69   3                      }
  70   2                      LCD_ShowNum(1,4,TShow,3);               //显示温度整数部分
  71   2                      LCD_ShowChar(1,7,'.');          //显示小数点
  72   2                      LCD_ShowNum(1,8,(unsigned long)(TShow*100)%100,2);//显示温度小数部分
  73   2                      
  74   2                      /*阈值判断及显示*/
  75   2                      if(KeyNum)
  76   2                      {
  77   3                              if(KeyNum==1)   //K1按键，THigh自增
  78   3                              {
  79   4                                      THigh++;
  80   4                                      if(THigh>125){THigh=125;}
  81   4                              }
  82   3                              if(KeyNum==2)   //K2按键，THigh自减
  83   3                              {
  84   4                                      THigh--;
  85   4                                      if(THigh<=TLow){THigh++;}
  86   4                              }
  87   3                              if(KeyNum==3)   //K3按键，TLow自增
  88   3                              {
  89   4                                      TLow++;
  90   4                                      if(TLow>=THigh){TLow--;}
  91   4                              }
  92   3                              if(KeyNum==4)   //K4按键，TLow自减
  93   3                              {
  94   4                                      TLow--;
  95   4                                      if(TLow<-55){TLow=-55;}
  96   4                              }
  97   3                              LCD_ShowSignedNum(2,4,THigh,3); //显示阈值数据
  98   3                              LCD_ShowSignedNum(2,12,TLow,3);
  99   3                              AT24C02_WriteByte(0,THigh);             //写入到At24C02中保存
 100   3                              Delay(5);
 101   3                              AT24C02_WriteByte(1,TLow);
 102   3                              Delay(5);
 103   3                      }
 104   2                      
 105   2                      /*温度状态判断及LED控制*/
 106   2                      if(T>THigh)                     //越界判断
 107   2                      {
 108   3                              LCD_ShowString(1,13,"OV:H");
 109   3                              AlarmFlag = 1;          //设置高温报警标志
 110   3                              LED1 = 1;                       //高温时LED D1熄灭
 111   3                              LED2 = 1;                       //高温时LED D2熄灭
 112   3                      }
 113   2                      else if(T<TLow)
 114   2                      {
 115   3                              LCD_ShowString(1,13,"OV:L");
 116   3                              AlarmFlag = 0;          //低温不报警，清除报警标志
C51 COMPILER V9.54   MAIN                                                                  07/02/2025 20:33:08 PAGE 3   

 117   3                              LED1 = 0;                       //低温时LED D1常亮
 118   3                              LED2 = 1;                       //低温时LED D2熄灭
 119   3                      }
 120   2                      else
 121   2                      {
 122   3                              LCD_ShowString(1,13,"    ");
 123   3                              AlarmFlag = 0;          //正常温度，清除报警标志
 124   3                              LED1 = 1;                       //正常温度时LED D1熄灭
 125   3                              LED2 = 0;                       //正常温度时LED D2常亮
 126   3                      }
 127   2                      
 128   2                      //强制重新设置LSA、LSB、LSC以防LCD操作影响
 129   2                      LSA=1;
 130   2                      LSB=1;
 131   2                      LSC=1;
 132   2              }
 133   1      }
 134          
 135          void Timer0_Routine() interrupt 1
 136          {
 137   1              static unsigned int T0Count;
 138   1              TL0 = 0x18;             //设置定时初值
 139   1              TH0 = 0xFC;             //设置定时初值
 140   1              T0Count++;
 141   1              if(T0Count>=20)
 142   1              {
 143   2                      T0Count=0;
 144   2                      Key_Loop();     //每20ms调用一次按键驱动函数
 145   2              }
 146   1              
 147   1              //蜂鸣器报警逻辑
 148   1              if(AlarmFlag)           //如果有高温报警
 149   1              {
 150   2                      AlarmCount++;
 151   2                      if(AlarmCount >= 500)   //每500ms响一次（500*1ms）
 152   2                      {
 153   3                              AlarmCount = 0;
 154   3                              Buzzer_Time(200);       //蜂鸣器响200ms
 155   3                      }
 156   2              }
 157   1              else
 158   1              {
 159   2                      AlarmCount = 0;         //清除计数器
 160   2              }
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    715    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
